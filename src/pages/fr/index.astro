---
import { getLangFromUrl } from "../../i18n/utils";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import Socials from "@components/Socials.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPostsByLocale from "@utils/getPostsByLocale";

import slugify from "@utils/slugify";
import { SOCIALS, SITE } from "@config";
import { useTranslations } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);

const posts = await getCollection("blog");

const localizedPosts = getPostsByLocale(posts, lang);
const sortedPosts = getSortedPosts(localizedPosts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;

const t = useTranslations(lang);
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero">
      <h1>{SITE.title}</h1>

      <p>
        Développeur backend et DevOps, depuis plus de 6 ans, je suis passionné
        par tout ce qui touche à l'automatisation et la developer experience
        (DX).
      </p>
      <p>
        Je suis actuellement en poste chez Shine, en tant que Platform Engineer.
      </p>
      <p>
        Ici, je vous partage tout mes retours d'expérience, mes idées et toutes
        les choses que j'ai apprises durant ma carrière. Enjoy !
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">{t("FIND_ME")}</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data }) => (
                <Card
                  href={`/${lang}/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent-posts">
      <h2>Recent Posts</h2>
      <ul>
        {
          sortedPosts.map(
            ({ data }, index) =>
              index < 4 && (
                <Card
                  href={`/${lang}/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              )
          )
        }
      </ul>
      <div class="all-posts-btn-wrapper">
        <LinkButton href={`/${lang}/posts`}>
          {t("home.allPosts")}
          <svg xmlns="http://www.w3.org/2000/svg"
            ><path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
    </section>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
